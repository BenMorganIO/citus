--
-- REPLICATE_REF_TABLES_ON_COORDINATOR
--
CREATE SCHEMA replicate_ref_to_coordinator;
SET search_path TO 'replicate_ref_to_coordinator';
SET citus.shard_replication_factor TO 1;
SET citus.shard_count TO 4;
SET citus.next_shard_id TO 8000000;
SET citus.next_placement_id TO 8000000;
--- enable logging to see which tasks are executed locally
SET client_min_messages TO LOG;
SET citus.log_local_commands TO ON;
CREATE TABLE squares(a int, b int);
SELECT create_reference_table('squares');
 create_reference_table 
------------------------
 
(1 row)

INSERT INTO squares SELECT i, i * i FROM generate_series(1, 10) i;
SELECT groupid FROM pg_dist_placement 
WHERE shardid IN (SELECT shardid FROM pg_dist_shard WHERE logicalrelid='squares'::regclass::oid)
ORDER BY groupid;
 groupid 
---------
      14
      16
(2 rows)

-- should be executed on a worker
SELECT count(*) FROM squares;
 count 
-------
    10
(1 row)

-- The colocation group for reference tables should have replication factor 2
SELECT replicationfactor = 2 FROM pg_dist_colocation WHERE distributioncolumntype=0;
 ?column? 
----------
 t
(1 row)

SELECT master_add_node('localhost', :master_port, groupid => 0) AS master_nodeid \gset
NOTICE:  Replicating reference table "orders_reference" to the node localhost:57636
NOTICE:  Replicating reference table "customer" to the node localhost:57636
NOTICE:  Replicating reference table "nation" to the node localhost:57636
NOTICE:  Replicating reference table "part" to the node localhost:57636
NOTICE:  Replicating reference table "supplier" to the node localhost:57636
NOTICE:  Replicating reference table "users_ref_test_table" to the node localhost:57636
NOTICE:  Replicating reference table "events_reference_table" to the node localhost:57636
NOTICE:  Replicating reference table "users_reference_table" to the node localhost:57636
NOTICE:  Replicating reference table "squares" to the node localhost:57636
-- adding the same node again should return the existing nodeid
SELECT master_add_node('localhost', :master_port, groupid => 0) = :master_nodeid;
 ?column? 
----------
 t
(1 row)

-- adding another node with groupid=0 should error out
SELECT master_add_node('localhost', 12345, groupid => 0) = :master_nodeid;
ERROR:  group 0 already has a primary node
-- The colocation group for reference tables should have replication factor 3
SELECT replicationfactor = 3 FROM pg_dist_colocation WHERE distributioncolumntype=0;
 ?column? 
----------
 t
(1 row)

SELECT groupid FROM pg_dist_placement 
WHERE shardid IN (SELECT shardid FROM pg_dist_shard WHERE logicalrelid='squares'::regclass::oid)
ORDER BY groupid;
 groupid 
---------
       0
      14
      16
(3 rows)

-- should be executed locally
SELECT count(*) FROM squares;
LOG:  executing the command locally: SELECT count(*) AS count FROM replicate_ref_to_coordinator.squares_8000000 squares
 count 
-------
    10
(1 row)

-- create a second reference table
CREATE TABLE numbers(a int);
SELECT create_reference_table('numbers');
 create_reference_table 
------------------------
 
(1 row)

INSERT INTO numbers VALUES (20), (21);
-- INSERT ... SELECT between reference tables
BEGIN;
EXPLAIN INSERT INTO squares SELECT a, a*a FROM numbers;
                                          QUERY PLAN                                           
-----------------------------------------------------------------------------------------------
 Custom Scan (Citus Adaptive)  (cost=0.00..0.00 rows=0 width=0)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=57637 dbname=regression
         ->  Insert on squares_8000000 citus_table_alias  (cost=0.00..41.88 rows=2550 width=8)
               ->  Seq Scan on numbers_8000001 numbers  (cost=0.00..41.88 rows=2550 width=8)
(7 rows)

INSERT INTO squares SELECT a, a*a FROM numbers;
SELECT * FROM squares WHERE a >= 20 ORDER BY a;
 a | b 
---+---
(0 rows)

ROLLBACK;
BEGIN;
EXPLAIN INSERT INTO numbers SELECT a FROM squares WHERE a < 3;
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Custom Scan (Citus Adaptive)  (cost=0.00..0.00 rows=0 width=0)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=57637 dbname=regression
         ->  Insert on numbers_8000001 citus_table_alias  (cost=0.00..38.25 rows=753 width=4)
               ->  Seq Scan on squares_8000000 squares  (cost=0.00..38.25 rows=753 width=4)
                     Filter: (a < 3)
(8 rows)

INSERT INTO numbers SELECT a FROM squares WHERE a < 3;
SELECT * FROM numbers ORDER BY a;
 a 
---
(0 rows)

ROLLBACK;
-- removing coordinator from pg_dist_node should update pg_dist_colocation
SELECT master_remove_node('localhost', :master_port);
 master_remove_node 
--------------------
 
(1 row)

SELECT replicationfactor = 2 FROM pg_dist_colocation WHERE distributioncolumntype=0;
 ?column? 
----------
 t
(1 row)

-- clean-up
SET client_min_messages TO ERROR;
DROP SCHEMA replicate_ref_to_coordinator CASCADE;
SET search_path TO DEFAULT;
RESET client_min_messages;
